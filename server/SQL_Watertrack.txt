CREATE ROLE masterBlaster WITH
	LOGIN
	NOSUPERUSER
	NOCREATEDB
	NOCREATEROLE
	INHERIT
	NOREPLICATION
	CONNECTION LIMIT -1;


-- Adding missing CREATE SEQUENCE
CREATE SEQUENCE watertrack_wt_id_seq START 1;
CREATE SEQUENCE water_officer_water_officer_id_seq  START 1;
CREATE SEQUENCE water_officer_region_id_seq START 1;
CREATE SEQUENCE region_region_id_seq START 1;


--===================================================================================
-- Table: public.region
-- DROP TABLE public.region;
--===================================================================================
CREATE TABLE public.region
(
    region_id bigint NOT NULL DEFAULT nextval('region_region_id_seq'::regclass),
    region character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT region_pkey PRIMARY KEY (region_id)
)

TABLESPACE pg_default;

--ALTER TABLE public.region
--    OWNER to "masterBlaster";

-- ===================================================================================
-- Table: public.watertrack
-- DROP TABLE public.watertrack;
-- ===================================================================================
CREATE TABLE public.watertrack
(
    wt_id bigint NOT NULL DEFAULT nextval('watertrack_wt_id_seq'::regclass),
    vfcbc character varying(20) COLLATE pg_catalog."default",
    file_number character varying(20) COLLATE pg_catalog."default",
    agency_authorization boolean NOT NULL,
    applicant_name character varying(255) COLLATE pg_catalog."default",
    source_name character varying(255) COLLATE pg_catalog."default",
    authorization_type character varying(255) COLLATE pg_catalog."default",
    purpose character varying(255) COLLATE pg_catalog."default",
    review_stage character varying(255) COLLATE pg_catalog."default",
    parked boolean DEFAULT false,
    comment_section text COLLATE pg_catalog."default",
    water_officer_id bigint,
    region_id bigint,
    archive boolean NOT NULL DEFAULT false,
    CONSTRAINT watertrack_pkey PRIMARY KEY (wt_id),
    CONSTRAINT watertrack_region_id_fkey FOREIGN KEY (region_id)
        REFERENCES public.region (region_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT watertrack_water_officer_id_fkey FOREIGN KEY (water_officer_id)
        REFERENCES public.water_officer (water_officer_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

 TABLESPACE pg_default;

-- ALTER TABLE public.watertrack
--    OWNER to "masterBlaster";

-- Trigger: wt_id_rsd_update

-- DROP TRIGGER wt_id_rsd_update ON public.watertrack;

CREATE TRIGGER wt_id_rsd_update
    AFTER INSERT
    ON public.watertrack
    FOR EACH ROW
    EXECUTE PROCEDURE public.wt_id_insert_rsd();
-- ===================================================================================
-- Table: public.review_stage_dates
-- DROP TABLE public.review_stage_dates;
-- ===================================================================================
CREATE TABLE review_stage_dates
(
    watertrack_id BIGSERIAL PRIMARY KEY,
    on_hold_total integer,
    application_wsd_start date,
    application_wsd_end date,
    application_wsd_total integer,
    date_parked_start date,
    date_parked_end date,
    date_parked_total integer,
    fn_consult_start date,
    fn_consult_end date,
    fn_consult_total integer,
    fcbc_wit_start date,
    fcbc_wit_end date,
    fcbc_wit_total integer,
    preliminary_start date,
    preliminary_end date,
    preliminary_total integer,
    tech_assessment_start date,
    tech_assessment_end date,
    tech_assessment_total integer,
    legal_review_start date,
    legal_review_end date,
    legal_review_total integer,
    sdm_start date,
    sdm_end date,
    sdm_total integer,
    distribute_complete_start date,
    distribute_complete_end date,
    distribute_complete_total integer,
    fcbc_rec_date_start date,
    fcbc_completed_end date,
    fcbc_total integer,
    days_old integer,
    wt_id bigint NOT NULL,
    CONSTRAINT review_stage_dates_watertrack_id_key UNIQUE (watertrack_id),
    CONSTRAINT chk_date_parked CHECK (date_parked_start <= COALESCE(date_parked_end, CURRENT_DATE) AND date_parked_end <= CURRENT_DATE) NOT VALID,
    CONSTRAINT chk_fn_dates CHECK (fn_consult_start <= COALESCE(fn_consult_end, CURRENT_DATE) AND fn_consult_end <= CURRENT_DATE) NOT VALID,
    CONSTRAINT chk_fcbc_wit_dates CHECK (fcbc_wit_start <= COALESCE(fcbc_wit_end, CURRENT_DATE) AND fcbc_wit_end <= CURRENT_DATE) NOT VALID,
    CONSTRAINT chk_preliminary_dates CHECK (preliminary_start <= COALESCE(preliminary_end, CURRENT_DATE) AND preliminary_end <= CURRENT_DATE) NOT VALID,
    CONSTRAINT chk_tech_assessment_dates CHECK (tech_assessment_start <= COALESCE(tech_assessment_end, CURRENT_DATE) AND tech_assessment_end <= CURRENT_DATE) NOT VALID,
    CONSTRAINT chk_legal_review_dates CHECK (legal_review_start <= COALESCE(legal_review_end, CURRENT_DATE) AND legal_review_end <= CURRENT_DATE) NOT VALID,
    CONSTRAINT chk_sdm_dates CHECK (sdm_start <= COALESCE(sdm_end, CURRENT_DATE) AND sdm_end <= CURRENT_DATE) NOT VALID,
    CONSTRAINT chk_distribute_dates CHECK (distribute_complete_start <= COALESCE(distribute_complete_end, CURRENT_DATE) AND distribute_complete_end <= CURRENT_DATE) NOT VALID,
    CONSTRAINT chk_fcbc_sdm_dates CHECK (fcbc_rec_date_start <= COALESCE(sdm_end, CURRENT_DATE)) NOT VALID
)

TABLESPACE pg_default;

-- ALTER TABLE public.review_stage_dates
--    OWNER to "masterBlaster";

COMMENT ON CONSTRAINT chk_tech_assessment_dates ON public.review_stage_dates
    IS 'tech assessment dates are not correct.';
COMMENT ON CONSTRAINT chk_legal_review_dates ON public.review_stage_dates
    IS 'legal review dates are not correct. ';
COMMENT ON CONSTRAINT chk_sdm_dates ON public.review_stage_dates
    IS 'decision made dates are not correct.';
COMMENT ON CONSTRAINT chk_distribute_dates ON public.review_stage_dates
    IS 'distribute and complete dates are not correct.';
COMMENT ON CONSTRAINT chk_fcbc_sdm_dates ON public.review_stage_dates
    IS 'The fcbc recieved date or sdm dates are not correct.';
--===================================================================================
-- Table: public.water_officer
-- DROP TABLE public.water_officer;
--===================================================================================
CREATE TABLE public.water_officer
(
    water_officer_id bigint NOT NULL DEFAULT nextval('water_officer_water_officer_id_seq'::regclass),
    first_name character varying(100) COLLATE pg_catalog."default",
    last_name character varying(100) COLLATE pg_catalog."default",
    email character varying(255) COLLATE pg_catalog."default",
    phone_number character varying(20) COLLATE pg_catalog."default",
    region_id bigint NOT NULL DEFAULT nextval('water_officer_region_id_seq'::regclass),
    CONSTRAINT water_officer_pkey PRIMARY KEY (water_officer_id),
    CONSTRAINT water_officer_region_id_fkey FOREIGN KEY (region_id)
        REFERENCES public.region (region_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

--===================================================================================
--This is the trigger function.
--===================================================================================
CREATE TRIGGER wt_id_rsd_update
    AFTER INSERT
    ON public.watertrack
    FOR EACH ROW
    EXECUTE PROCEDURE public.wt_id_insert_rsd();


CREATE OR REPLACE FUNCTION public.wt_id_insert_rsd()
  RETURNS TRIGGER 
  LANGUAGE PLPGSQL
  AS
$$
BEGIN
	INSERT INTO public.review_stage_dates(wt_id, vfcbc)
	VALUES (NEW.wt_id, NEW.vfcbc);

	RETURN NEW;
END;
$$

