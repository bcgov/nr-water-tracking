apiVersion: apps/v1
kind: Deployment
metadata:
  generation: 1
  labels:
    app.kubernetes.io/component:  {{ .Values.app_name }}-backend
    app.kubernetes.io/instance: {{ .Values.app_name }}-backend
    app.kubernetes.io/part-of: {{ .Values.app_name }}
    app.kubernetes.io/managed-by: Helm
    name: {{ .Values.app_name }}-backend-deploy
    app: {{ .Values.app_name }}-backend
    role: {{ .Values.label_api_role }}
    env: {{ .Values.env }}
    #manager: kube-controller-manager
    #operation: Update
  name: {{ .Values.app_name }}-backend-deploy
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app:  {{ .Values.app_name }}-backend
      deployment:  {{ .Values.app_name }}-backend-deploy
      env: {{ .Values.env }}
      # app: watrtrck-kube-backend
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        openshift.io/generated-by: OpenShiftWebConsole
      creationTimestamp: null
      labels:
        #app: watrtrck-kube-backend
        #deploymentconfig: watrtrck-kube-backend
        app: {{ .Values.app_name }}-backend
        #name: {{ .Values.app_name}}-backend
        role: {{ .Values.label_api_role}}
        env: {{ .Values.env }}
        deployment: {{ .Values.app_name }}-backend-deploy
    spec:
      containers:
      - env:
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  key: database-user
                  name: {{ .Values.postgresdb_params.database_secret_name }}
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-password
                  name: {{ .Values.postgresdb_params.database_secret_name }}
            - name: PGDATABASE
              valueFrom:
                secretKeyRef:
                  key: database-name
                  name: {{ .Values.postgresdb_params.database_secret_name }}
            - name: PGHOST
              value: {{ .Values.app_name }}-postgres-svc
            - name: PGPORT
              value: {{ .Values.postgresdb_params.database_port | quote }}
            - name: PORT
              value: {{ .Values.backend_port | quote }}
        image:  >-
          ghcr.io/bcgov/watrtrck-backend:{{ .Values.backend_image_tag }}
        # image-registry.openshift-image-registry.svc:5000/acc72b-dev/watrtrck-kube-backend@sha256:958e67423bacf4c8e8b6533fdcc5102b5ef6da6b7bf841527870fb39131f94e8
        imagePullPolicy: IfNotPresent
        livenessProbe: 
          httpGet:
            path: /api/v1/master-tracker/water-track-region/regional-table-values
            port: {{ .Values.backend_port }}
          initialDelaySeconds: 5
          periodSeconds: 120
          failureThreshold: 5
        startupProbe:
          httpGet:
              path: /api/v1/master-tracker/water-track-region/regional-table-values
              port: {{ .Values.backend_port }}
          initialDelaySeconds: 15
          periodSeconds: 10
          failureThreshold: 3
        name: {{ .Values.app_name }}-backend
        ports:
        - containerPort: {{ .Values.backend_port }}
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
