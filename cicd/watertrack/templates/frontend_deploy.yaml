apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  generation: 1
  labels:
    name: {{ .Values.app_name }}-client-deploy
    app: {{ .Values.app_name }}-client
    role: {{ .Values.label_app_role }}
    env: {{ .Values.env }}


    app.kubernetes.io/component: {{ .Values.app_name }}-client
    app.kubernetes.io/instance: {{ .Values.app_name }}-client
    app.kubernetes.io/part-of: {{ .Values.app_name }}
    app.kubernetes.io/managed-by: Helm
  name: {{ .Values.app_name }}-client-deploy
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: {{ .Values.app_name }}-client
      deployment: {{ .Values.app_name }}-client-deploy
      env: {{ .Values.env }}
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        openshift.io/generated-by: OpenShiftWebConsole
      creationTimestamp: null
      labels:
        app: {{ .Values.app_name }}-client
        deployment: {{ .Values.app_name }}-client-deploy
        #name: {{ .Values.app_name }}-client
        role: {{ .Values.label_app_role }}
        env: {{ .Values.env }}
    spec:
      containers:
      - image: >-
          ghcr.io/bcgov/watrtrck-client:{{ .Values.backend_image_tag }}
        #image-registry.openshift-image-registry.svc:5000/acc72b-dev/watrtrck-kube-client@sha256:2fe4236957c2455e0997536b627a01833202261aa41ae9774a5d78d6dbea584b
        imagePullPolicy: IfNotPresent
        name: watrtrck-client
        ports:
        - containerPort: {{ .Values.client_container_port }}
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30

