apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  annotations:
    template.alpha.openshift.io/wait-for-ready: 'true'

  generation: 2
  labels:
    name: {{ .Values.app_name }}-backend-dc
    app: {{ .Values.app_name }}-backend
    role: {{ .Values.label_api_role }}
    env: {{ .Values.env }}
    # app.kubernetes.io/component: {{ .Values.app_name }}-backend
    # app.kubernetes.io/instance: watrtrck-backend
    # app.kubernetes.io/part-of: watrtrck-backend-app
    # app.openshift.io/runtime: nodejs
  name: {{ .Values.app_name }}-backend-dc
spec:
  replicas: 1
  #revisionHistoryLimit: 10
  selector:
    app:  {{ .Values.app_name }}-backend
    deploymentconfig:  {{ .Values.app_name }}-backend-dc
  strategy:
    activeDeadlineSeconds: 21600
    resources: {}
    type: Recreate
    # rollingParams:
    #   intervalSeconds: 1
    #   maxSurge: 25%
    #   maxUnavailable: 25%
    #   timeoutSeconds: 600
    #   updatePeriodSeconds: 1
    # type: Rolling
  template:
    metadata:
      annotations:
        openshift.io/generated-by: OpenShiftWebConsole
      creationTimestamp: null
      labels:
        app: {{ .Values.app_name }}-backend
        name: {{ .Values.app_name}}
        role: {{ .Values.label_api_role}}
        env: {{ .Values.env }}
        deploymentconfig: {{ .Values.app_name }}-backend-dc
    spec:
      containers:
        - env:
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  key: database-user
                  name: {{ .Values.postgresdb_params.database_secret_name }}
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-password
                  name: {{ .Values.postgresdb_params.database_secret_name }}
            - name: PGDATABASE
              valueFrom:
                secretKeyRef:
                  key: database-name
                  name: {{ .Values.postgresdb_params.database_secret_name }}
            - name: PGHOST
              value: {{ .Values.app_name }}-postgres-svc
            - name: PGPORT
              value: {{ .Values.postgresdb_params.database_port | quote }}
            - name: PORT
              value: {{ .Values.backend_port | quote }}
          image: >-
            ghcr.io/bcgov/watrtrck-backend:20210616-2257
          imagePullPolicy: IfNotPresent
          livenessProbe: 
            httpGet:
              path: /api/v1/master-tracker/water-track-region/regional-table-values
              port: {{ .Values.backend_port }}
            initialDelaySeconds: 5
            periodSeconds: 120
            failureThreshold: 5
          startupProbe:
            httpGet:
              path: /api/v1/master-tracker/water-track-region/regional-table-values
              port: {{ .Values.backend_port }}
            initialDelaySeconds: 15
            periodSeconds: 10
            failureThreshold: 3

          name: {{ .Values.app_name }}-backend
          ports:
          - containerPort: {{ .Values.backend_port }}
            protocol: TCP
          resources:
            limits:
              memory: 100Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30

  triggers:
  - imageChangeParams:
      automatic: true
      containerNames:
      - {{ .Values.app_name }}-backend
      from:
        kind: ImageStreamTag
        name: watrtrck-backend:20210616-2257
      lastTriggeredImage: ghcr.io/bcgov/watrtrck-backend@sha256:2265924ad8b68f354aaa806420157f690b7f6c6181510eebb1b5cc5b20580ac6
    type: ImageChange
  # # - type: ConfigChange
